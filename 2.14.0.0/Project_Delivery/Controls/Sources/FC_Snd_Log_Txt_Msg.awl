FUNCTION "FC_Snd_Log_Txt_Msg" : VOID
TITLE =%version: 0.01 % CN: 32
//Function:
//Prepare and send message log text to BPI
//
//History:
//This version  %created_by: nlhdl %
//              %date_created: Tuesday, April 24, 2018 08:32:45 AM %
//              %release: VI_GEN/RA_Dev %
//
//Modification History:                                 By:      Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//Initial Version based on version 0.12                 nlHdL    24-04-18   0.01
//
//Description:
//Prepare and send message log message text to BPI. Note the text should be 
//placed 
//inside the log text of the outgoing messages before this function is triggerd 
//to 
//o and the text to the message.
//
FAMILY : VIBES
VERSION : 0.0


VAR_INPUT
  i_ID : DWORD ;	//ID Record HEX AAAA - ZZSS/OO.
  i_Event_value : INT ;	//Event Value
END_VAR
VAR_TEMP
  t_AR1_Backup : DINT ;	//Save the contents of AR1
  t_Ret_Val_Word : WORD ;	//Return value
  t_Ret_Val_Int : INT ;	//Return Value
  t_Text_Clear_Counter : INT ;	//Counter to clear all text characters
  t_Next_Adress : INT ;	//Next adress of the log text to be cleared
  t_Start_Adress : INT ;	//Start adress in DB_outgoing_Msgs of Logging Messages
  t_FIFO_PLC_DB_num : INT ;	//Number of DB PLC FIFO
END_VAR
BEGIN
NETWORK
TITLE =AA: Store AR1 and Get Date and Time

      TAR1  ; // Store AR1
      T     #t_AR1_Backup; 

      CALL "READ_CLK" (
           RET_VAL                  := #t_Ret_Val_Int,
           CDT                      := "DB_Outgoing_Msgs".Logging.EventTime);

NETWORK
TITLE =BA: Write messageID

      L     2602; 
      T     "DB_Outgoing_Msgs".Logging.MessageID; 
NETWORK
TITLE =CA: Copy AreaID, ZoneID and SectionID

      L     #i_ID; // Load ID
      L     DW#16#FFFF0000; // Filter Area number only
      AD    ; 
      SRD   16; // Slide Area nubmer to beginning AAAA0000 -> AAAA
      BTD   ; // Convert HEX to INT
      T     "DB_Outgoing_Msgs".Logging.AreaID; // Transfer to outgoing messages

      L     #i_ID; // Load ID
      L     DW#16#FF00; // Filter Zone number only
      AD    ; 
      SRD   8; // Slide Zone nubmer to beginning 0000ZZ00 -> 0000ZZ
      BTI   ; // Convert HEX to INT
      T     "DB_Outgoing_Msgs".Logging.ZoneID; // Transfer to outgoing messages

      L     #i_ID; // Load ID
      L     DW#16#FF; // Filter Section number only
      AD    ; 
      BTI   ; // Convert HEX to INT
      T     "DB_Outgoing_Msgs".Logging.EquipmentID; // Transfer to outgoing messages
NETWORK
TITLE =DA: Write data to log messages

      L     #i_Event_value; 
      T     "DB_Outgoing_Msgs".Logging.Value; // Transfer to outgoing messages

      L     0; 
      T     "DB_Outgoing_Msgs".Logging.Event_ID; // Transfer to outgoing messages

// determine severity from Event ID 
      L     5; 
      T     "DB_Outgoing_Msgs".Logging.Severity; // Transfer to outgoing messages
NETWORK
TITLE =EA: Put message in buffer

      OPN   "DB_Send_FIFO"; 
      L     DBNO; 
      T     #t_FIFO_PLC_DB_num; 

      CALL "BLKMOV" (
           SRCBLK                   := "DB_Outgoing_Msgs".Default,
           RET_VAL                  := #t_Ret_Val_Int,
           DSTBLK                   := "DB_Outgoing_Msgs".Merged_Message);

      CALL "BLKMOV" (
           SRCBLK                   := "DB_Outgoing_Msgs".Logging,
           RET_VAL                  := #t_Ret_Val_Int,
           DSTBLK                   := "DB_Outgoing_Msgs".Merged_Message);

      CALL "FC_FIFO" (
           i_FIFO_DB_Num            := #t_FIFO_PLC_DB_num,
           i_Mode                   := 'L',
           i_ANY_Data               := "DB_Outgoing_Msgs".Merged_Message,
           i_ID                     := #i_ID,
           o_RET_VAL_FIFO           := #t_Ret_Val_Word);

NETWORK
TITLE =FA: Clear Text with spaces

      OPN   "DB_Outgoing_Msgs"; 
      L     0; 
      T     #t_Text_Clear_Counter; 

      CALL "FC_Any_To_Adress" (
           i_ANY_Data               := "DB_Outgoing_Msgs".Logging.MessageBody,
           o_Adress                 := #t_Start_Adress);


FA01: L     #t_Start_Adress; 
      L     #t_Text_Clear_Counter; 
      +I    ; 
      T     #t_Next_Adress; 
      SLW   3; 
      LAR1  ; 

      L     ' '; 
      T     DBB [AR1,P#0.0]; 

      L     #t_Text_Clear_Counter; 
      L     1; 
      +I    ; 
      T     #t_Text_Clear_Counter; 
      L     104; 
      >=I   ; 
      JCN   FA01; 

      L     #t_Next_Adress; 
NETWORK
TITLE =HA: Restore AR1

      L     #t_AR1_Backup; 
      LAR1  ; 
END_FUNCTION

