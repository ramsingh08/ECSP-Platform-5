FUNCTION "FC_OB82_PN_Error" : VOID
TITLE =%version: 0.03 % CN: 30
//Function: 
//Module for acyclic diagnose of diagnostic interrupts (module errors) in  
//ProfiNET Devices
//
//History:
//This version  %created_by:  nlhdl %
//              %date_created:  maandag 7 december 2015 16:02:01 %
//              %release: VI_RAW/RA_Dev %
//
//Modification History:                                   By:    Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//ra#9751: Add source files ECS-P to VI_RAW             nlHdL    14-12-15   0.03
//ra#9751: Add source files ECS-P to VI_RAW             nlHdL    07-12-15   0.03
//7324: ECS-P General from the RD to RA for platform    nlHdL    06-07-15   0.03
//16544: Update profinet diagnose and add OB83 failure  nlHdL    12-03-14   0.03
//15807: Block consistency update IO symbols, comment   nlHdL    18-09-13   0.02
//Initial Revision                                      nlHHop   17-04-13   0.01
//
//Description: 
//On the basis of OB82 Event class, Fault ID and module address the PN Devices 
//error bitmap belonging to a ProfiNET IO System specified on the input is 
//updated. 
//                     
//IMPORTANT: This module must be called from within OB82 and could not be used on 
//another location!
//
//
//  ------------
//  -- Remark --
//  ------------
//   This network can handle only ONE ProfiNET IO System.
//   In a case a multiple IO systems are used within the project, this block 
//   call has to be called multiple times. 
//
FAMILY : General
VERSION : 0.0


VAR_INPUT
  i_PN_IO_System_ID : INT  := 1;	//ProfiNET IO System Identification Setting [100..115]
  i_PN_Error_Bitmap : ANY ;	//ANY Pointer to PN Error Bitmap
END_VAR
VAR_TEMP
  t_OB82_EV_CLASS : BYTE ;	//OB82 Local Data - Event Class
  t_OB82_FLT_ID : BYTE ;	//OB82 Local Data - Fault identification
  t_OB82_MDL_ADDR : WORD ;	//OB82 Local Data - Logical(diagnostic) Module Address 
  t_AR2_Mask : DWORD ;	//'relative address'-mask
  t_DB_num : INT ;	//Number of the DB with PN statuses bitmaps
  t_RET_VAL : INT ;	//Error report
  t_SFC71_AREA : INT ;	//AREA SFC71 - When "2" DP or PN device or IO System
  t_SFC71_MASTER : INT ;	//MASTER SFC71 - ID of the DP master / PNIO System 
  t_SFC71_STATION : INT ;	//STATION SFC71 - DP slave or PN device number
  t_SFC71_SLOT : INT ;	//SLOT SFC71 - Slot Number
  t_SFC_71_SUBADDR : INT ;	//SUBADDR SFC71 - SubSlot Number
  t_SFC71_OFFSET : INT ;	//OFFSET SFC71 - Offset in user data area of the associated module
END_VAR
BEGIN
NETWORK
TITLE =AA: Get 'relative address'-mask
//In case of a multiple instance DB, AR2 contains the pointer from the beginning 
//of the multiple instance DB to the start of the instance DB of this FB. AR2 is 
//masked and stored for further use.
      TAR2  ; 
      AD    DW#16#FFFFFF; 
      T     #t_AR2_Mask; 
NETWORK
TITLE =AB: Load local data OB82
//Load EV_CLASS, FLT_ID and MDL_ADDR from OB82 local data stack
      NOP   0; 

//////////////////////////////////////////////////////
// -------- Retrieve Information From OB86 -------- //
//////////////////////////////////////////////////////

      L     DW#16#87000000; // Load local data OB82
      LAR1  ; 
      L     B [AR1,P#0.0]; // Load EV_CLASS
      T     #t_OB82_EV_CLASS; // Transfer to temp
      L     B [AR1,P#1.0]; // Load FLT_ID
      T     #t_OB82_FLT_ID; // Transfer to temp
      L     W [AR1,P#6.0]; // Load MDL_ADDR
      T     #t_OB82_MDL_ADDR; // Transfer to temp

NETWORK
TITLE =BA:Convert the Device Logical Address to the Geographical Addres
//Within the OB82 the interrupts are called with the Logical (diagnostic) Address 
//of the device that coursed the interrupt. For further evaluation of the 
//interrupt the logical address has to be translate to the geographical address 
//of the device. By using the SFC71 the following geographical address 
//parameters could be obtained:
//
//Used output of the SFC71
//-------------------------
//
// - AREA    : Specify how the parameters should be interpreted
// - MASTER  : DP master System or PNIO System ID 
// - STATION : DP Slave or PN Device Number
      NOP   0; 

//////////////////////////////////////////////////////////
// -------- Convert the Device Logical Address -------- //
// --------    to the Geographical Address    -------- //
//////////////////////////////////////////////////////////

      CALL "LOG_GEO" (
           LADDR                    := #t_OB82_MDL_ADDR,
           RET_VAL                  := #t_RET_VAL,
           AREA                     := #t_SFC71_AREA,
           MASTER                   := #t_SFC71_MASTER,
           STATION                  := #t_SFC71_STATION,
           SLOT                     := #t_SFC71_SLOT,
           SUBSLOT                  := #t_SFC_71_SUBADDR,
           OFFSET                   := #t_SFC71_OFFSET);

NETWORK
TITLE =CA: Check if the Error Interrupt shall be evaluated in this Bloc

      NOP   0; 

//////////////////////////////////////////////////////////////////////////////////////////
// -------- Check if the Error Interrupt shall be evaluated in this Block Call -------- //
//////////////////////////////////////////////////////////////////////////////////////////

//**********************************************************************//
// -------- Check if the interrupt was course by the PN Device -------- //
//**********************************************************************//

// The interrupt was coursed by the PN device in a case, the outputs from 
// the SFC 71 have the following value (are in the following ranges)

// Area    := 2          - Error discovered in the DP Master or PNIO System (Network)
// Master  := [100..115] - Range for the allowed PNIO System IDs
// Station := [1..256]   - Range for the allowed PN Device Numbers

// All the retrieved parameters should be as mentioned (within aforementioned ranges)
// otherwise the interrupt was not coursed by the PN Device and this block shall be
// terminated

      A(    ; 
      L     #t_SFC71_AREA; // IF error was discovered in the DP Master or PNIO System (Network)
      L     2; 
      ==I   ; 
      )     ; 
      A(    ; // AND the device is located on the ProfiNET Network
      L     #t_SFC71_MASTER; 
      L     100; 
      >=I   ; 
      )     ; 
      A(    ; 
      L     #t_SFC71_MASTER; 
      L     115; 
      <=I   ; 
      )     ; 
      A(    ; 
      L     #t_SFC71_STATION; // AND the device has correct ID 
      L     256; 
      <=I   ; 
      )     ; // THEN continue
      NOT   ; 
      BEC   ; // IF any of the aforementioned condition is not fulfilled then END this block

//************************************************************//
// -------- Check if the PNIO System ID is the same  -------- //
// --------    as an input "i_PNIO_System_ID"        -------- //
//************************************************************//

// It is possible to have up to 16 ProfiNET IO Systems per S7 Project (S7-400)
// For each of the ProfiNET IO System used, this block call has to be called
// separately. The ProfiNET IO System that shall be evaluated per call, is 
// specified via the input "i_PNIO_System_ID"

      L     #i_PN_IO_System_ID; // If the specified via the input PNIO System
      L     #t_SFC71_MASTER; // is different then the "#t_SFC71_MASTER" output from SFC71
      <>I   ; 
      BEC   ; // Then end this block
NETWORK
TITLE =DA: Set/Reset Error status in the "DB_Diagnose_PN"

      NOP   0; 

//////////////////////////////////////////////////
// -------- Set PN Device Error Status -------- //
//////////////////////////////////////////////////

      L     P##i_PN_Error_Bitmap; // Load pointer to ProfiNET Error bitmap
      L     #t_AR2_Mask; // Add 'relative address'-mask to AR1  
      +D    ; 
      LAR1  ; 
      L     W [AR1,P#4.0]; // Load DB number PN Error bitmap
      T     #t_DB_num; // Transfer to temp DB number
      L     D [AR1,P#6.0]; // Load Pointer to start of ProfiNET Devices Error bitmap in DB
      L     #t_SFC71_STATION; // And add Offset in PN Device Error bitmap (=station number)
      +D    ; 
      L     1; 
      -D    ; 
      LAR1  ; // Transfer to AR1  

      OPN   DB [#t_DB_num]; // Open DB of PN Error bitmap (temp DB number)
      L     #t_OB82_EV_CLASS; // IF incoming event (Error)..
      L     B#16#39; 
      ==I   ; 
      S     DBX [AR1,P#0.0]; // ..SET flag in Error bitmap on slave station position (AR1)

      L     #t_OB82_EV_CLASS; // IF outgoing event (No Error anymore)..
      L     B#16#38; 
      ==I   ; 
      R     DBX [AR1,P#0.0]; // ..RESET flag in Error bitmap on slave station position (AR1)   

NETWORK
TITLE =CA: SET Diagnose interrupt signal for this master

      L     P##i_PN_Error_Bitmap; // Load pointer to ProfiNET Error bitmap
      L     #t_AR2_Mask; // Add 'relative address'-mask to AR1  
      +D    ; 
      LAR1  ; 
      L     W [AR1,P#4.0]; // Load DB number PN Error bitmap
      T     #t_DB_num; // Transfer to temp DB number
      L     D [AR1,P#6.0]; 
      LAR1  ; 

      OPN   DB [#t_DB_num]; // Open DB of PN Error bitmap (temp DB number)
      SET   ; 
      S     DBX [AR1,P#32.0]; // Set Diagnose interrupt

END_FUNCTION

