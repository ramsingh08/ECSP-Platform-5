FUNCTION_BLOCK "FB_HMI_Oper_Mode_IF"
TITLE =%version: 0.01 % CN: 40
//Function:
//HMI functions to interface with Operator mode screen.
//
//History:
//This version  %created_by:  inajos %
//              %date_created: Monday, November 14, 2016 3:06:54 PM %
//              %release: VI_GEN/RA_Dev %
//
//Modification History:                                 By:      Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//ra#13189:Initial version based on FB_HMI_IF_SSM       inajos   27-10-16   0.01
//
//Description:
//The functions control are:
//- Interface with multiple Operator screen defined in DB_HMI_Oper_IF_Mode
//- Get Oper ID which is shown on HMI
//- Handle Oper HMI commands 
//- Active screen no and total screen no for that zone in Operator Screen
//
FAMILY : General
VERSION : 0.0


VAR_INPUT
  i_DB_HMI_Mode_Index : BLOCK_DB ;	//Index DB for zones with modes
  i_DB_HMI_IF_Mode : BLOCK_DB ;	//HMI Interface DB for zones with modes
  i_DB_HMI_Command : BLOCK_DB ;	//HMI_Man_Command DB
  i_OP_Status : BLOCK_DB ;	//Status to OP DB
  i_Screen_Current : INT  := 1;	//Current Selected Screen number 
  i_HMI_Command : INT ;	//HMI Command number (as defined in HMI-node configuration)
END_VAR
VAR_OUTPUT
  o_Total_No_Screens : INT ;	//Total configured Operator Zone screen
END_VAR
VAR
  s_Num_Of_Screens_Present : INT ;	//Number of Zones present in interface DB
  s_Current_Screen_Data : "UDT_IF_HMI_Oper";	//Current selected Zone data
  s_HMI_Cmd : STRUCT 	//HMI Commands
   Button1 : BOOL ;	//Button1
   Button2 : BOOL ;	//Button2
   Button3 : BOOL ;	//Button3
   Button4 : BOOL ;	//Button4
  END_STRUCT ;	
  s_Cmd_Ref : STRUCT 	//Command number of HMI commands
   K1_Auto : INT  := 1321;	//Auto
   K2_Fixed_Straight : INT  := 1322;	//Semi-Auto Fixed Straight
   K3_Fixed_Sort1 : INT  := 1323;	//Semi-Auto Fixed Sort1
   K4_Fixed_Sort2 : INT  := 1324;	//Semi-Auto Fixed Sort2
  END_STRUCT ;	
END_VAR
VAR_TEMP
  t_AR2_Mask : DWORD ;	//'relative address'-mask
  t_Record_Data_length : INT ;	//Record lenght in DB Mode interface
  t_Cmd_Record_Data_length : INT ;	//Record lenght in DB Mode interface
  t_HMI_Command_offset : INT ;	//Record lenght in DB Mode interface
  t_ANY_Source : ANY ;	//ANY source
  t_Ret_Val : INT ;	//Temp Return Value
  t_DBNO_IF_Mode_Index : WORD ;	//Interface Mode DB number
  t_HMI_IF_Offset_ID : DWORD ;	//Offset ID
  t_HMI_Cmd : WORD ;	//Temp variable for HMI commands
  t_Display_Bits : INT ;	//Display Bits
  t_Status_Text : INT ;	//Mode/Status text
  t_Button1 : INT ;	//Button 1 Text
  t_Button2 : INT ;	//Button 2 Text
  t_Button3 : INT ;	//Button 3 Text
  t_Button4 : INT ;	//Button 4 Text
  t_Status_No : INT ;	//Status Number
  t_Active_No : INT ;	//Active Number
  t_Total_No : INT ;	//Total Number
  t_Function_No : INT ;	//Function Number
  t_Display_Bits_Value : INT ;	//Display Bits Value
  t_Int_ID_Address : DWORD ;	//ID Address
  t_INT_ID : DINT ;	//ID in Integer Format
END_VAR
BEGIN
NETWORK
TITLE =AA: Get relative addres out of AR2
//Address register:10000ZZZ 00000yyy yyyyyyyy yyyyyxxx
//Z=Operand area y=Byte address   x=Bit address
//Mask Byte and Bit address only
      TAR2  ; // Load 'base address register'
      AD    DW#16#FFFFFF; // Mask 'address only' out of area-internal-pointer
      T     #t_AR2_Mask; // 'relative address'-mask
NETWORK
TITLE =BA: Offsets

      NOP   0; // Hold the command line
// Offset in "UDT_HMI_Man_Input"
      L     18; // Record length of "UDT_HMI_Man_Input"
      T     #t_Record_Data_length; 

//Offset from  #i_DB_HMI_Command
      L     2; // 2 bytes
      T     #t_Cmd_Record_Data_length; 

      L     0; 
      T     #t_HMI_Command_offset; //Commands Offset

//offset from #i_OP_Status
      L     2; 
      T     #t_Int_ID_Address; 



// Offset for DB_HMI_Zone_IF_OP_TP


      L     P#140.0; //  Offset of Display Bits
      T     #t_Display_Bits; 


      L     P#146.0; // Offset of the ID  (ID String 30)
      T     #t_HMI_IF_Offset_ID; 


      L     P#152.0; 
      T     #t_Button1; //Offset of Button1

      L     P#154.0; 
      T     #t_Button2; //Offset of Button2

      L     P#156.0; 
      T     #t_Button3; //Offset of Button3

      L     P#158.0; 
      T     #t_Button4; //Offset of Button4


      L     P#162.0; 
      T     #t_Active_No; //Active Number


      L     P#166.0; 
      T     #t_Function_No; //Function Number


NETWORK
TITLE =CA: Calculate numbers of Screens interface present

      OPN   #i_DB_HMI_Mode_Index; 
      L     DBLG; // Get the DB length..
      L     #t_Record_Data_length; 
      /I    ; // AND calculate the nr of Zones present 
      T     #s_Num_Of_Screens_Present; 
      T     #o_Total_No_Screens; 

      OPN   #i_DB_HMI_Mode_Index; 
      L     DBNO; // Load Zone interface DB number
      T     #t_DBNO_IF_Mode_Index; 

      L     #s_Num_Of_Screens_Present; 
      L     0; 
      <=I   ; //IF Number of zones with modes <=0
      BEC   ; //THEN end this block

NETWORK
TITLE =DA: Load the data for current selected Zone 

      LAR1  P##t_ANY_Source; // Load pointer to local any destination for blockmove

      L     W#16#1002; // Load 10 hex (for S7) and data type     
      T     LW [AR1,P#0.0]; 

      L     #t_Record_Data_length; // No of Byte
      T     LW [AR1,P#2.0]; 

      L     #t_DBNO_IF_Mode_Index; // Load DB number
      T     LW [AR1,P#4.0]; 

      L     #i_Screen_Current; // Load SSM number
      L     1; // Start with 0
      -I    ; 
      L     #t_Record_Data_length; // length of one record in comp. type DB
      *I    ; // pointer to current record
      SLW   3; // convert byte => bit pointer
      L     DW#16#84000000; // 84=DB 
      +D    ; 
      T     LD [AR1,P#6.0]; // Memory area / start address of the data

      CALL "BLKMOV" (
           SRCBLK                   := #t_ANY_Source,
           RET_VAL                  := #t_Ret_Val,
           DSTBLK                   := #s_Current_Screen_Data);

NETWORK
TITLE =EA: Copy Current Zone ID to HMI 


      OPN   #i_OP_Status; 
      L     #t_Int_ID_Address; 
      SLD   3; 
      LAR1  ; 
      L     DBD [AR1,P#0.0]; //ID in Double Int format
      T     #t_INT_ID; 

      OPN   #i_DB_HMI_IF_Mode; //Open Interfce DB
      L     #t_HMI_IF_Offset_ID; //Set pointer to mode variable in interface DB
      LAR1  ; 
      L     #t_INT_ID; 
      T     DBD [AR1,P#0.0]; 
NETWORK
TITLE =FA : Requested cmd and Output HMI cmd to current Operator screen

      L     #i_HMI_Command; // Striked command
      L     #s_Cmd_Ref.K1_Auto; // K1: Auto
      ==I   ; 
      A     #s_Current_Screen_Data.Display_Bits.Button1_bit; //only if command is available on zone
      =     #s_HMI_Cmd.Button1; // THEN Auto request

//Operation screen commands:
      L     #i_HMI_Command; // Striked command
      L     #s_Cmd_Ref.K2_Fixed_Straight; // K2: Semi-Auto Fixed Straight
      ==I   ; 
      A     #s_Current_Screen_Data.Display_Bits.Button2_bit; //only if command is available on zone
      =     #s_HMI_Cmd.Button2; // THEN Fixed Straight request

      L     #i_HMI_Command; // Striked command
      L     #s_Cmd_Ref.K3_Fixed_Sort1; // K3: Semi-Auto Fixed Sort
      ==I   ; 
      A     #s_Current_Screen_Data.Display_Bits.Button3_bit; //only if command is available on zone
      =     #s_HMI_Cmd.Button3; // THEN Fixed Sort request


      L     #i_HMI_Command; // Striked command
      L     #s_Cmd_Ref.K4_Fixed_Sort2; // K4: Semi-Auto Fixed Sort
      ==I   ; 
      A     #s_Current_Screen_Data.Display_Bits.Button4_bit; //only if command is available on zone
      =     #s_HMI_Cmd.Button4; // THEN Fixed Sort request

// Copy the HMI Commands word
      L     P##s_HMI_Cmd; // Pointer to command bools
      L     #t_AR2_Mask; 
      +D    ; 
      LAR1  ; 
      L     W [AR1,P#0.0]; // read data (word)
      T     #t_HMI_Cmd; 

// Transfer the HMI command word to current selected zone


      L     #i_Screen_Current; // Current selected zone
      L     0; 
      ==I   ; 
      JCN   FA99; 
      L     1; 
      T     #i_Screen_Current; 
FA99: L     #i_Screen_Current; // Current selected zone
      L     1; 
      -I    ; 
      L     #t_Cmd_Record_Data_length; // Data record length 
      *I    ; 
      L     #t_HMI_Command_offset; // Add offset for command
      +I    ; 
      SLD   3; // Convert to pointer format
      LAR1  ; 
      OPN   #i_DB_HMI_Command; // Open zone interfce DB
      L     #t_HMI_Cmd; // Load HMI Command
      T     DBW [AR1,P#0.0]; 


NETWORK
TITLE =GA: Copy Relevant status to HMI

      NOP   0; 

      CALL "BLKMOV" (
           SRCBLK                   := #s_Current_Screen_Data.Display_Bits,
           RET_VAL                  := #t_Ret_Val,
           DSTBLK                   := #t_Display_Bits_Value);

// Copy the info to HMI interface DB
      OPN   #i_DB_HMI_IF_Mode; //Open Interfce DB
      L     #t_Display_Bits; //Set pointer to mode variable in interface DB
      LAR1  ; 

      L     #t_Display_Bits_Value; //Active zone No.to HMI interface
      T     DBW [AR1,P#0.0]; 

      L     #s_Current_Screen_Data.Fixed.Par_ID_Name; //Total No.of zones to HMI Interfcae
      T     DBW [AR1,P#2.0]; 

      L     #s_Current_Screen_Data.Fixed.Par_Mode_Name; //Total No.of zones to HMI Interfcae
      T     DBW [AR1,P#4.0]; 



// Copy the info to HMI interface DB
      OPN   #i_DB_HMI_IF_Mode; //Open Interfce DB
      L     #t_Button1; //Set pointer to mode variable in interface DB
      LAR1  ; 

      L     #s_Current_Screen_Data.Fixed.Button1; 
      T     DBW [AR1,P#0.0]; 

      L     #s_Current_Screen_Data.Fixed.Button2; 
      T     DBW [AR1,P#2.0]; 

      L     #s_Current_Screen_Data.Fixed.Button3; 
      T     DBW [AR1,P#4.0]; 

      L     #s_Current_Screen_Data.Fixed.Button4; 
      T     DBW [AR1,P#6.0]; 


// Copy the info to HMI interface DB
      OPN   #i_DB_HMI_IF_Mode; //Open Interfce DB
      L     #t_Function_No; //Set pointer to mode variable in interface DB
      LAR1  ; 

      L     #s_Current_Screen_Data.Fixed.Function_No; 
      T     DBW [AR1,P#0.0]; 



// Copy the info to HMI interface DB
      OPN   #i_DB_HMI_IF_Mode; //Open Interfce DB
      L     #t_Active_No; //Set pointer to mode variable in interface DB
      LAR1  ; 

      L     #i_Screen_Current; //Active zone No.to HMI interface
      T     DBW [AR1,P#0.0]; 

      L     #s_Num_Of_Screens_Present; //Total No.of zones to HMI Interfcae
      T     DBW [AR1,P#2.0]; 

END_FUNCTION_BLOCK

