FUNCTION "FC_Crt_TransportDir" : VOID
TITLE =%version: 0.05 % CN: 31
//Function:
//Prepare and send message 'TransportDirectionReport'
//
//History:
//This version %created_by: nlhdl %
//             %date_created: maandag 7 december 2015 16:04:42 %
//              %release: VI_RAW/RA_Dev %
//
//Modification History:                                 By:      Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//ra#9751: Add source files ECS-P to VI_RAW             nlHdL    14-12-15   0.05
//ra#9751: Add source files ECS-P to VI_RAW             nlHdL    07-12-15   0.05
//7324: ECS-P General from the RD to RA for platform    nlHdL    06-07-15   0.05
//22337: Remove the vibes1.x with the vibes 3.x         nlHdL    09-01-15   0.05
//18060: Update messages ID's for Vibes 3.2             nlHdL    19-02-14   0.04
//15799: Block consistency update IO symbols, comment   nlHdL    23-09-13   0.03
//15170: Changed BTI to BTD for 4 digit Area num        nlHdL    13-08-13   0.02
//Initial Version                                       nlLvdG   31-05-13   0.01
//
//Description:
//Prepare and send message 'TransportDirectionReport'
//
FAMILY : VIBES
VERSION : 0.0


VAR_INPUT
  i_ID : DWORD ;	//ID Record HEX AAAA - ZZS
  i_Data : INT ;	//Data needed to send the message 1=Normal, 2 =Reverse Direction
  i_FIFO_PLC_DB_num : INT ;	//Number of the PLC FIFO DB
  i_DB_Event_Nr : INT ;	//Number of the Event DB
END_VAR
VAR_TEMP
  t_AR1_Backup : DINT ;	//Save the contents of AR1
  t_Ret_Val_Word : WORD ;	//Return value
  t_Ret_Val_Int : INT ;	//Return Value
END_VAR
BEGIN
NETWORK
TITLE =AA: Store AR1 and Get Date and Time

      CALL "READ_CLK" (
           RET_VAL                  := #t_Ret_Val_Int,
           CDT                      := "DB_Outgoing_Msgs".TransportDirReport.Body.EventTime);

NETWORK
TITLE =BA: Write messageID

      L     202; 
      T     "DB_Outgoing_Msgs".TransportDirReport.Body.MessageID; 
NETWORK
TITLE =CA: Copy AreaID, ZoneID and SectionID

      L     #i_ID; // Load ID
      L     DW#16#FFFF0000; // Filter Area number only
      AD    ; 
      SRD   16; // Slide Area nubmer to beginning AAAA0000 -> AAAA
      BTD   ; // Convert HEX to INT
      T     "DB_Outgoing_Msgs".TransportDirReport.Body.AreaID; // Transfer to outgoing messages

      L     #i_ID; // Load ID
      L     DW#16#FF00; // Filter Zone number only
      AD    ; 
      SRD   8; // Slide Zone nubmer to beginning 0000ZZ00 -> 0000ZZ
      BTI   ; // Convert HEX to INT
      T     "DB_Outgoing_Msgs".TransportDirReport.Body.ZoneID; // Transfer to outgoing messages

      L     #i_ID; // Load ID
      L     DW#16#FF; // Filter Section number only
      AD    ; 
      BTI   ; // Convert HEX to INT
      T     "DB_Outgoing_Msgs".TransportDirReport.Body.EquipmentID; // Transfer to outgoing messages
NETWORK
TITLE =DA: Copy directions into message

      L     2; 
      L     #i_Data; // Check if data > 2, Else fault in direction
      >=I   ; 
      JCN   DA01; 
      T     "DB_Outgoing_Msgs".TransportDirReport.Body.Direction; 
      JU    DA99; 
DA01: L     0; // Fault, no correct direction
      T     "DB_Outgoing_Msgs".TransportDirReport.Body.Direction; 
DA99: NOP   0; 
NETWORK
TITLE =EA: Put message in buffer

      CALL "BLKMOV" (
           SRCBLK                   := "DB_Outgoing_Msgs".Default,
           RET_VAL                  := #t_Ret_Val_Int,
           DSTBLK                   := "DB_Outgoing_Msgs".Merged_Message);

      CALL "BLKMOV" (
           SRCBLK                   := "DB_Outgoing_Msgs".TransportDirReport,
           RET_VAL                  := #t_Ret_Val_Int,
           DSTBLK                   := "DB_Outgoing_Msgs".Merged_Message);

      CALL "FC_FIFO" (
           i_FIFO_DB_Num            := #i_FIFO_PLC_DB_num,
           i_Mode                   := 'L',
           i_ANY_Data               := "DB_Outgoing_Msgs".Merged_Message,
           i_ID                     := #i_ID,
           o_RET_VAL_FIFO           := #t_Ret_Val_Word);

END_FUNCTION

