FUNCTION "FC_Crt_Availability" : VOID
TITLE =%version: 0.08 %  CN: 31
//Function:
//Prepare and send message 'AvailabilityReport'
//
//History:
//This version  %created_by: nlhdl %
//              %date_created: Tuesday, December 19, 2017 1:16:14 PM %
//              %release: VI_GEN/RA_Dev %
//
//Modification History:                                 By:      Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//ina#5615: AvailabilityReport include OperationalState nlHdL    19-12-17   0.08
//ra#16405: Data Layer Update ECS-P for VI_System 5.2   nlHdL    10-08-16   0.07
//ra#9751: Add source files ECS-P to VI_RAW             nlHdL    14-12-15   0.06
//ra#9751: Add source files ECS-P to VI_RAW             nlHdL    07-12-15   0.06
//7324: ECS-P General from the RD to RA for platform    nlHdL    06-07-15   0.06
//22337: Remove the vibes1.x with the vibes 3.x         nlHdL    08-01-15   0.06
//15799: Block consistency update IO symbols, comment   nlHdL    23-09-13   0.03
//15170: Changed BTI to BTD for 4 digit Area num        nlHdL    12-08-13   0.02
//Initial Version based on version 0.03 ECS-P GEN       nlLvdG   31-05-13   0.01
//
//Description:
//Prepare and send message 'AvailabilityReport'
//
FAMILY : VIBES
VERSION : 0.0


VAR_INPUT
  i_ID : DWORD ;	//ID Record HEX AAAA - ZZSS/OO.
  i_Data : INT ;	//Data needed to send the message
  i_FIFO_PLC_DB_num : INT ;	//Number of DB PLC FIFO
END_VAR
VAR_TEMP
  t_AR1_Backup : DINT ;	//Save the contents of AR1
  t_Ret_Val_Word : WORD ;	//Return value Word, not used
  t_Ret_Val_Int : INT ;	//Return value Integer, not Used
END_VAR
BEGIN
NETWORK
TITLE =AA: Store AR1 and Get Date and Time

      TAR1  ; // Store AR1
      T     #t_AR1_Backup; 

      CALL "READ_CLK" (
           RET_VAL                  := #t_Ret_Val_Int,
           CDT                      := "DB_Outgoing_Msgs".AvailabilityReport.Body.EventTime);

NETWORK
TITLE =BA: Write messageID

      AN    "M_Comm_Degraded"; // When in degraded mode
      JCN   BA01; 

      L     221; // When NOT in degraded mode
      T     "DB_Outgoing_Msgs".AvailabilityReport.Body.MessageID; 

      JU    BA99; 

BA01: L     1221; // When in degraded mode
      T     "DB_Outgoing_Msgs".AvailabilityReport.Body.MessageID; 

BA99: NOP   0; 
NETWORK
TITLE =CA: Copy AreaID, ZoneID and SectionID

      L     #i_ID; // Load ID
      L     DW#16#FFFF0000; // Filter Area number only
      AD    ; 
      SRD   16; // Slide Area nubmer to beginning AAAA0000 -> AAAA
      BTD   ; // Convert HEX to INT
      T     "DB_Outgoing_Msgs".AvailabilityReport.Body.AreaID; // Transfer to outgoing messages

      L     #i_ID; // Load ID
      L     DW#16#FF00; // Filter Zone number only
      AD    ; 
      SRD   8; // Slide Zone nubmer to beginning 0000ZZ00 -> 0000ZZ
      BTI   ; // Convert HEX to INT
      T     "DB_Outgoing_Msgs".AvailabilityReport.Body.ZoneID; // Transfer to outgoing messages

      L     #i_ID; // Load ID
      L     DW#16#FF; // Filter Section number only
      AD    ; 
      BTI   ; // Convert HEX to INT
      T     "DB_Outgoing_Msgs".AvailabilityReport.Body.EquipmentID; // Transfer to outgoing messages
NETWORK
TITLE =DA: Status 

      L     #i_Data; 
      L     W#16#F; 
      AW    ; 
      T     "DB_Outgoing_Msgs".AvailabilityReport.Body.Availability; 

      L     #i_Data; 
      L     W#16#F00; 
      AW    ; 
      SRW   8; 
      T     "DB_Outgoing_Msgs".AvailabilityReport.Body.FunctionMode; 

      L     #i_Data; 
      L     W#16#F000; 
      AW    ; 
      SRW   12; 
      T     "DB_Outgoing_Msgs".AvailabilityReport.Body.OperationalState; 
NETWORK
TITLE =EA: Put message in buffer

      CALL "BLKMOV" (
           SRCBLK                   := "DB_Outgoing_Msgs".Default,
           RET_VAL                  := #t_Ret_Val_Int,
           DSTBLK                   := "DB_Outgoing_Msgs".Merged_Message);

      CALL "BLKMOV" (
           SRCBLK                   := "DB_Outgoing_Msgs".AvailabilityReport,
           RET_VAL                  := #t_Ret_Val_Int,
           DSTBLK                   := "DB_Outgoing_Msgs".Merged_Message);

      CALL "FC_FIFO" (
           i_FIFO_DB_Num            := #i_FIFO_PLC_DB_num,
           i_Mode                   := 'L',
           i_ANY_Data               := "DB_Outgoing_Msgs".Merged_Message,
           i_ID                     := #i_ID,
           o_RET_VAL_FIFO           := #t_Ret_Val_Word);

NETWORK
TITLE =FA: Restore AR1

      L     #t_AR1_Backup; 
      LAR1  ; 
END_FUNCTION

