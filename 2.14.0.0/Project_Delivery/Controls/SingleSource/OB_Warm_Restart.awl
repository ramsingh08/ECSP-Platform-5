ORGANIZATION_BLOCK "OB_Warm_Restart"
TITLE =%version: 0.06 % CN: 90  "OB_Warm_Restart"
//Function:
//Suppress unintentional error messages during startup of the CPU (Warm restart)
//
//History:
//This version  %created_by: nlhdl %
//              %date_created: maandag 7 december 2015 16:16:52 %
//              %release: VI_RAW/RA_Dev %
//
//Modification History:                                   By:    Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//ra#9751: Add source files ECS-P to VI_RAW             nlHdL    14-12-15   0.06
//ra#9751: Add source files ECS-P to VI_RAW             nlHdL    07-12-15   0.06
//7324: ECS-P General from the RD to RA for platform    nlHdL    06-07-15   0.06
//15797: Keyword release added                          nlwwij   26-09-13   0.06
//PR14161 Update violation coding convention 9          nlple    26-06-13   0.05
//CR19512 Update sources according S7 Manager           nlHdL    08-03-13   0.04
//Added functionality                                   nljbax   24-09-10   0.03
//Added version                                         nljbax   24-09-10   0.02
//Initial revision                                      nljbax   24-09-10   0.01
//Description:
//Example in which a 'Warm restart' is excecuted: 
// - after downloading the user program (retentive memory is retained)  
//
//Preceding to the 'Warm restart', the CPU is in STOP mode. As a result the 
//supply voltage of the Profibus-DP and ASI slaves is switched off, which causes 
//that the slaves have to be initialised again. The initialisation of the 
//Profibus-DP and ASI slaves (executed at power up) takes several seconds in 
//which the slaves are not yet ready for operation. This implies that the 
//reported slave and field IO status has to be rejected for several seconds to 
//avoid unintentional error messages. Therefore the user program is started after 
//a fixed delay time has been elapsed. 
//
FAMILY : General
VERSION : 0.0


VAR_TEMP
  OB100_EV_CLASS : BYTE ;	//16#13, Event class 1, Entering event state, Event logged in diagnostic buffer
  OB100_STRTUP : BYTE ;	//16#81/82/83/84 Method of startup
  OB100_PRIORITY : BYTE ;	//27 (Priority of 1 is lowest)
  OB100_OB_NUMBR : BYTE ;	//100 (Organization block 100, OB100)
  OB100_RESERVED_1 : BYTE ;	//Reserved for system
  OB100_RESERVED_2 : BYTE ;	//Reserved for system
  OB100_STOP : WORD ;	//Event that caused CPU to stop (16#4xxx)
  OB100_STRT_INFO : DWORD ;	//Information on how system started
  OB100_DATE_TIME : DATE_AND_TIME ;	//Date and time OB100 started
END_VAR
BEGIN
NETWORK
TITLE =AA: Delay the start of first program cycle
//Delay the start of the user program, to prevent error messages caused by the 
//start-up process
      L     S5T#10S; //load delay time

      CLR   ; 
      SD    "T_CPU_StartUp_Delay"; //initialise Timer 

AA01: NOP   0; 
      SET   ; 
      SD    "T_CPU_StartUp_Delay"; //Start Timer 
      AN    "T_CPU_StartUp_Delay"; 
      JC    AA01; //Jump to wait untill time is elapsed

      CLR   ; 
      SD    "T_CPU_StartUp_Delay"; //clear timer 
END_ORGANIZATION_BLOCK

